// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Analyzes stock depletion rate and suggests restock amounts using GenAI.
 *
 * - analyzeStockDepletionAndSuggestRestock - A function that analyzes stock depletion and suggests restock amounts.
 * - AnalyzeStockDepletionAndSuggestRestockInput - The input type for the analyzeStockDepletionAndSuggestRestock function.
 * - AnalyzeStockDepletionAndSuggestRestockOutput - The return type for the analyzeStockDepletionAndSuggestRestock function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeStockDepletionAndSuggestRestockInputSchema = z.object({
  productName: z.string().describe('The name of the product to analyze.'),
  historicalSalesData: z.string().describe('Historical sales data for the product (e.g., JSON format).'),
  currentStockLevel: z.number().describe('The current stock level of the product.'),
  leadTimeDays: z.number().describe('The lead time in days for restocking the product.'),
  targetServiceLevel: z.number().describe('The target service level (e.g., 0.95 for 95%).'),
});
export type AnalyzeStockDepletionAndSuggestRestockInput = z.infer<typeof AnalyzeStockDepletionAndSuggestRestockInputSchema>;

const AnalyzeStockDepletionAndSuggestRestockOutputSchema = z.object({
  suggestedRestockAmount: z.number().describe('The suggested restock amount for the product.'),
  analysisReport: z.string().describe('A detailed analysis of the stock depletion rate and the factors influencing the restock suggestion.'),
});
export type AnalyzeStockDepletionAndSuggestRestockOutput = z.infer<typeof AnalyzeStockDepletionAndSuggestRestockOutputSchema>;

export async function analyzeStockDepletionAndSuggestRestock(
  input: AnalyzeStockDepletionAndSuggestRestockInput
): Promise<AnalyzeStockDepletionAndSuggestRestockOutput> {
  return analyzeStockDepletionAndSuggestRestockFlow(input);
}

const analyzeStockDepletionAndSuggestRestockPrompt = ai.definePrompt({
  name: 'analyzeStockDepletionAndSuggestRestockPrompt',
  input: {
    schema: AnalyzeStockDepletionAndSuggestRestockInputSchema,
  },
  output: {
    schema: AnalyzeStockDepletionAndSuggestRestockOutputSchema,
  },
  prompt: `You are an expert inventory analyst specializing in bar management.

  Analyze the stock depletion rate for {{productName}} based on the provided historical sales data, current stock level, lead time, and target service level.
  Consider factors such as seasonality, trends, and promotions.

  Historical Sales Data: {{{historicalSalesData}}}
  Current Stock Level: {{currentStockLevel}}
  Lead Time (days): {{leadTimeDays}}
  Target Service Level: {{targetServiceLevel}}

  Based on your analysis, suggest an optimal restock amount to minimize stockouts and avoid overstocking.
  Provide a detailed analysis report explaining your reasoning and the factors influencing your suggestion.

  Ensure the suggestedRestockAmount is a number, and the analysisReport is a well-written explanation.

  Output:
  {{output}}
  `,
});

const analyzeStockDepletionAndSuggestRestockFlow = ai.defineFlow(
  {
    name: 'analyzeStockDepletionAndSuggestRestockFlow',
    inputSchema: AnalyzeStockDepletionAndSuggestRestockInputSchema,
    outputSchema: AnalyzeStockDepletionAndSuggestRestockOutputSchema,
  },
  async input => {
    const {output} = await analyzeStockDepletionAndSuggestRestockPrompt(input);
    return output!;
  }
);
